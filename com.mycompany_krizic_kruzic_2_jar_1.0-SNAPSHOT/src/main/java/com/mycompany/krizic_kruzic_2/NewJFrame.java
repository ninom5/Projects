/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.krizic_kruzic_2;

import javax.swing.JOptionPane;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Korisnik
 */
public class NewJFrame extends javax.swing.JFrame{

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    };
    
     
    

    
    int turn  =2;
    int buttons_used[] = {0,0,0,0,0,0,0,0,0};
    int[] igracX = {0,0,0,0,0,0,0,0,0};
    int[] igracO = {0,0,0,0,0,0,0,0,0};

    int playerXwon()
    {
        if(igracX[0] == 1 && igracX[1]==1 && igracX[2] == 1)
        {
            return 1;
        }
        if(igracX[3] == 1 && igracX[4]==1 && igracX[5] == 1)
        {
            return 1;
        }
        if(igracX[6] == 1 && igracX[7]==1 && igracX[8] == 1)
        {
            return 1;
        }
        if(igracX[0] == 1 && igracX[3]==1 && igracX[6] == 1)
        {
            return 1;
        }
        if(igracX[1] == 1 && igracX[4]==1 && igracX[7] == 1)
        {
            return 1;
        }
        if(igracX[2] == 1 && igracX[5]==1 && igracX[8] == 1)
        {
            return 1;
        }
        if(igracX[0] == 1 && igracX[4]==1 && igracX[8] == 1)
        {
            return 1;
        }
        if(igracX[0] == 1 && igracX[2]==1 && igracX[6] == 1)
        {
            return 1;
        }
        return 0;
    }
    
    int playerOwon()
    {
        if(igracO[0] == 1 && igracO[1]==1 && igracO[2] == 1)
        {
            return 1;
        }
        if(igracO[3] == 1 && igracO[4]==1 && igracO[5] == 1)
        {
            return 1;
        }
        if(igracO[6] == 1 && igracO[7]==1 && igracO[8] == 1)
        {
            return 1;
        }
        if(igracO[0] == 1 && igracO[3]==1 && igracO[6] == 1)
        {
            return 1;
        }
        if(igracO[1] == 1 && igracO[4]==1 && igracO[7] == 1)
        {
            return 1;
        }
        if(igracO[2] == 1 && igracO[5]==1 && igracO[8] == 1)
        {
            return 1;
        }
        if(igracO[0] == 1 && igracO[4]==1 && igracO[8] == 1)
        {
            return 1;
        }
        if(igracO[0] == 1 && igracO[2]==1 && igracO[6] == 1)
        {
            return 1;
        }
        return 0;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jFrame1 = new javax.swing.JFrame();
        jDialog4 = new javax.swing.JDialog();
        button0 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane1.setViewportView(jTextArea2);

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        button0.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button0ActionPerformed(evt);
            }
        });

        button1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button4.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button5.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button7.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Dubai", 3, 14)); // NOI18N
        reset.setText("ponovno igranje");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 2, 18)); // NOI18N
        jLabel1.setText("Križić kružić");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(236, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(189, 189, 189))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(button3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(button0, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(button4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(button5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button0, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(button1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button4, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button0ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[0] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button0.setText("X");
            buttons_used[0] = 1;
            igracX[0] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button0.setText("O");
        buttons_used[0] = 1;
        igracO[0] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }     
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button0ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[1] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button1.setText("X");
            buttons_used[1] = 1;
            igracX[1] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button1.setText("O");
        buttons_used[1] = 1;
        igracO[1] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[2] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button2.setText("X");
            buttons_used[2] = 1;
            igracX[2] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button2.setText("O");
        buttons_used[2] = 1;
        igracO[2] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
           try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[3] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button3.setText("X");
            buttons_used[3] = 1;
            igracX[3] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
               try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button3.setText("O");
        buttons_used[3] = 1;
        igracO[3] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button3ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[4] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button4.setText("X");
            buttons_used[4] = 1;
            igracX[4] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button4.setText("O");
        buttons_used[4] = 1;
        igracO[4] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
    }//GEN-LAST:event_button4ActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[5] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button5.setText("X");
            buttons_used[5] = 1;
            igracX[5] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button5.setText("O");
        buttons_used[5] = 1;
        igracO[5] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button5ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[6] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button6.setText("X");
            buttons_used[6] = 1;
            igracX[6] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
               try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button6.setText("O");
        buttons_used[6] = 1;
        igracO[6] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button6ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[7] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button7.setText("X");
            buttons_used[7] = 1;
            igracX[7] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
               try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button7.setText("O");
        buttons_used[7] = 1;
        igracO[7] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
        
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        // TODO add your handling code here:
        if(buttons_used[8] == 0)
{
    if(turn%2 ==0)
        {
            turn++;
            button8.setText("X");
            buttons_used[8] = 1;
            igracX[8] = 1;
        
            int resultX = playerXwon();
            int resultO = playerOwon();
        
            if(resultX == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(resultO == 1)
            {
                try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }       
        }
    else
    {
        turn++;
        button8.setText("O");
        buttons_used[8] = 1;
        igracO[8] = 1;
        
        int resultX = playerXwon();
        int resultO = playerOwon();
        
        if(resultX == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac X je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac X je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        else if(resultO == 1)
        {
            try {
                    JOptionPane.showMessageDialog(rootPane, "Igrac O je pobijedio");
                    FileWriter myWriter = null;
                    try {
                        myWriter = new FileWriter("filename.txt");
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    myWriter.write("Igrac O je pobijedio");
                    try {
                        myWriter.close();
                    } catch (IOException ex) {
                        Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Uspjesno zapisano u file");
                } catch (IOException ex) {
                    Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }  
    }
}
    else
        JOptionPane.showMessageDialog(rootPane, "Ovo mjesto je već zauzeto");
    }//GEN-LAST:event_button8ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        
        button0.setText("");
        button1.setText("");
        button2.setText("");
        button3.setText("");
        button4.setText("");
        button5.setText("");
        button6.setText("");
        button7.setText("");
        button8.setText("");
        
        turn = 2;
        
        for(int i=0; i<9; i++)
        {
            buttons_used[i] = 0;
        }
         for(int i=0; i<9; i++)
        {
            igracX[i] = 0;
        }
          for(int i=0; i<9; i++)
        {
            igracO[i] = 0;
        }
    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton reset;
    // End of variables declaration//GEN-END:variables
}
/*class WriteToFile {
  public static void main(String[] args) {
    try {
      char playerWon = ;
      FileWriter myWriter = new FileWriter("filename.txt");
      myWriter.write(playerWon);
      myWriter.close();
      System.out.println("Successfully wrote to the file.");
    } catch (IOException e) {
      System.out.println("An error occurred.");
    }
  }
}*/